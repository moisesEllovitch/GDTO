c
paramsc
cc
paramsc
c
@error_message.full_messages
@error_message.full_message
@error_message
n
c
params
c
params
c
params
c
params
c
Comment.last
params
c
params
c
errors
@comment
c
args
n
next
step
@item
item_path
@comment.errors
@comment
c
params
@item.comments
@item.comment
@item
@comment
c
params
@comment
c
request
@error
error
errors
error
@item.comments.last.errors
@item.comments.last.error
@item.comments.last
@item.comments
@comment
@item.self.comment
@item.comment
self.error
self.errors
self.comment
f.error_message
f.error
f.errors
f.error_messages
Comment.last
@comment
c
n
@comment.valid?
@comment.is_valid?
@comment.errors
@comment
c
@comment
comment
Comment.last.errors
Comment.last
@item.comments
@item
@item.comment
@comment
continue
c
@comment
f.label
f
@comments
@comment
self.is_valid?
self.errors
self.id
self
Comment.last
f
params
param
@item.comment
@item.comments
@item.id
continue
@item.comments
continue
exit
f
@item.comments
item.comments
@item
continue
Item.find(32).average
i =_
Item.find(32)
continue
item.id
item.average
item.calculate_average
continue
self.average
media
continue
next
i.average
next
i.average
continue
comment
quit
comment
next
comment
quit
media
quit
y
quit
somatorio
exit
somatorio
next
array_scores
somatorio
quit
somatorio
continue
next
continue
quit
array_scores
somatorio
continue
c.score
c.find(1).score
c.body
c.score
c.average
c
continue
next
continue
next
@comment
Comment
next
continue
next
continue
@comment
next
continue
@comment
next
continue
next
@comment
next
comment_params
@item.comments
continue
Item.first.comments
Item.last
Item.first
params
Item.find(params[:id])
@item
continue
@item
next
@item
next
params
@item
continue
@item.comments
@item
continue
exit
@item.comments
@item
@item.comments.create(comment_params)
params[:comment]
 params.require(:comment).permit(:body, :score)
params
comment_params
byebug
quit
continue
help

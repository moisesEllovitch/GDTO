Isso estava no form_for de Create de Item. Estava no _form.html.erb:
<%= form_for(@item) do |f| %>


  <div class="field">
    <%= f.label :category %><br>

<!-- O objeto f não está recebendo o valor para categoria... -->
<!-- Criar nova tabela Category e alterar em Item, category para category_id -->
<!-- O código select que faz o dropdown com as opções, está no arquivo "dropdown Categorias" criado só pra isso. Após pegar de volta, pode ser excluído. -->

  </div>
  <div class="field">
    <%= f.label :institution %><br>
    <%= f.text_field :institution %>
  </div>
<!--    <div class="field">
    <%= f.label :average %><br>
    <%= f.number_field :average %>
  </div>
 -->  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>





-- MOSTRAR ERROS NO _form (chamado no edit)


Isso estava dentro de controller.item.rb, na parte de create.


respond_to do |format|
      if @item.save
        format.html { redirect_to @item, notice: 'Item was successfully created.' }
        format.json { render :show, status: :created, location: @item }
      else
        format.html { render :new }
        format.json { render json: @item.errors, status: :unprocessable_entity }
      end
    end


<!-- antigo
 -->    <%= f.text_field :category %>

<!-- novo
 -->    
    <select name="category">
      <%= @items.select(#'distinct category').each do |ca| %>
      <li>
        <option value="<%= ca.category %>"><%= ca.category %></option>
      </li>
      <% #end %>
    </select>
    <select name="category">
        <li><option value="<%= Category.select("name") %>"><%= category.name.all %></option></li>
    </select>




<!-- Arquivo no application.html.erb (para mostrar submenu)
 -->						<% @items.select('distinct category').each do |p| %>
							<li class="classe_li_naveg"><%= link_to(p.category, items_path) %></li>
						<% end %>






class CreateUsers < ActiveRecord::Migration
  def up
    create_table :users do |t|
      t.string :email
      t.string :password

      t.timestamps null: false
    end
  end

  def down
    drop_table :users
  end
end

class CreateItems < ActiveRecord::Migration
  def up
    create_table :items do |t|
      t.string :category
      t.string :institution
      t.integer :average

      t.timestamps null: false
    end
  end

  def down
    drop_table :items
  end
end

class CreateComments < ActiveRecord::Migration
  def up
    create_table :comments do |t|
      t.text :body
      t.integer :score
      t.references :item, index: true, foreign_key: true

      t.timestamps null: false
    end
  end

  def down
    drop_table :comments
  end
end

class ChangeToPasswordDigest < ActiveRecord::Migration
 
  def self.up
    rename_column :users, :password, :password_digest
  end

  def self.down
    # rename back if you need or do something else or do nothing
  end
  
end

class AddRememberDigestToUsers < ActiveRecord::Migration
  def change
    add_column :users, :remember_digest, :string
  end
end

class AddAdminToUsers < ActiveRecord::Migration
  def change
    add_column :users, :admin, :boolean, default: false
  end
end

class AddCategoryRefToItem < ActiveRecord::Migration
  def up
    add_reference(:items, :category, foreign_key: true, :null => true)
    remove_column(:items, :category, :string)
  end

  def down
  	remove_column :items, :category_id
  	add_column :items, :category, :string
  end
end
